#include <iostream>
#include <time.h>
#include <conio.h>

//빙고 게임 210306
using namespace std;

enum AI_MODE
{
	AM_EASY,
	AM_HARD
};


int main()
{	
	srand((unsigned int)time(NULL));
	int iNumber[25] = {};
	int iAINumber[25] = {};

	for (int i = 0; i < 25; ++i)
	{
		iNumber[i] = i + 1;
		iAINumber[i] = i + 1;
	}
	// 숫자를 섞어준다.
	int iTemp, idx1, idx2;

	for (int i = 0; i < 100; ++i)
	{
		idx1 = rand() % 25;
		idx2 = rand() % 25;

		iTemp = iNumber[idx1];
		iNumber[idx1] = iNumber[idx2];
		iNumber[idx2] = iTemp;

		idx1 = rand() % 25;
		idx2 = rand() % 25;

		iTemp = iAINumber[idx1];
		iAINumber[idx1] = iAINumber[idx2];
		iAINumber[idx2] = iTemp;
		
		
	}

	int iBingo = 0;
	int iAIBingo = 0;
	int iAIMode;
	while (true)
	{
		system("cls");
		// AI 난이도를 선택한다.
		cout << "1.Easy" << endl;
		cout << "2.Hard" << endl;
		cout << "AI 모드를 선택하세요." << endl;
		cin >> iAIMode;

		if (iAIMode >= AM_EASY && iAIMode <= AM_HARD)
			break;
		
	}


	/*
	AI Easy 모드는 현재 AI의 숫자목록중 *로 바뀌지 않은 숫자 목록을 만들어서 그 목록중 하나를 선택
	하게 만든다.(랜덤하게)
	*/
	// 선택안된 목록 배열은 만들어준다.
	int iNoneSelect[25] = {};
	// 선택안된 숫자 개수를 저장한다.
	int iNoneSelectCount = 0;



	while (true)
	{
		
		system("cls");
		// 숫자를 5 x 5 로 출력한다.

		cout << "============Player============" << endl;
		for (int i = 0; i < 5; ++i)
		{
			for (int j = 0; j < 5; ++j)
			{	
				if (iNumber[i * 5 + j] == INT_MAX) {
					cout << "*\t";
				}
				else
				cout << iNumber[i * 5 + j] << "\t";
			}
			cout << endl;
		}
		cout << "Bingo Line : " << iBingo << endl << endl;

		//AI 빙고 판을 출력한다.
		cout << "==============AI==============" << endl;

		for (int i = 0; i < 5; ++i)
		{
			for (int j = 0; j < 5; ++j)
			{
				if (iAINumber[i * 5 + j] == INT_MAX)
					cout << "*\t";
				else
					cout << iAINumber[i * 5 + j] << "\t";
			}

			cout << endl;
		}
		// AI 빙고 줄 수를 출력한다.
		cout << "AIBingo Line :" << iAIBingo << endl;
		if (iBingo >= 5) 
		{
			cout << "Player 승리 " << endl;
			break;
		}
		else if (iAIBingo >= 5)
		{
			cout << "AI 승리" << endl;
			break;
		}

		cout << "숫자를 입력하세요(0 : 종료)";
		int iInput;
		cin >> iInput;
		if (iInput == 0)
			break;

		else if (iInput < 1 || iInput > 25)
			continue;


		// 중복입력을 체크하기 위한 변수이다. 기본적으로 중복되었다라고 하기위해 true라고 잡아주었다.
		bool bAcc = true;


		// 모든 숫자를 차례대로 검사해서 입력한 숫자와 같은 숫자가 있는지를 찾아낸다.
		for (int i = 0; i < 25; ++i)
		{	
			// 같은 숫자가 있을경우
			// bAcc 변수를 false로 만들어준다.
			if (iInput == iNumber[i])
			{
				bAcc = false;

				// 숫자를 *로 변경하기 위해 특수한 값인 INT_MAX로 해준다.
				iNumber[i] = INT_MAX;

				// 더이상 다른 숫자를 찾아볼 필요가 없으므로
				// for문을 빠져나간다.

				break;
			}
		}

		// bAcc 변수가 true 일 경우 중복된 숫자를 입력해서 숫자를 *로 바꾸지 못했으므로 다시 입력받게
		// continue 해준다.
		if (bAcc)
			continue;

		// 중복이 아니라면 AI의 숫자도 찾아서 *로 바꿔준다.
		for (int i = 0; i < 25; ++i)
		{
			if (iAINumber[i] == iInput)
			{
				iAINumber[i] = INT_MAX;
				// 플레이어가 입력한 숫자를 찾아서 *로 바꿨으므로
		
				break;
			}
		}

		// AI가 선택을 한다. AI가 선택하는 것은 AI모드에 따라서 달라진다.
		iNoneSelectCount = 0;
		switch (iAIMode)
		{
		case AM_EASY:
			// 선택안된 숫자목록을 만들어준다.
			// 선택안된 숫자 개수는 목록을 만들때 카운팅 해준다.
			iNoneSelectCount = 0;
			for (int i = 0; i < 25; ++i)
			{
					//현재 숫자가 *이 아닐경우
				if (iAINumber[i] != INT_MAX)
				{
					// * 이 아닌 숫자일 경우 iNoneSelectCount 를 인덱스로 활용한다.
					// 선택 안된 목록에 추가할떄마다 개수를 1씩 증가시켜서 총 선택안된 개수를 구해준다.
					// 그런데 0부터 카운트가 시작이므로 0번에 넣고 ++해서 1개 추가되었다라고 해준다.
					iNoneSelect[iNoneSelectCount] = iAINumber[i];
					++iNoneSelectCount;
				}
			}
			break;
		case AM_HARD:
			break;
		}

		// 빙고 줄 수를 체크하는 것은 매번 숫자를 입력할때마다 처음부터 새로 카운트를 할것이다.
		// 그러므로 iBingo 변수를 0으로 매번 초기화하고 새롭게 줄 수 를 구해주도록 한다.
		iBingo = 0;

		// 가로, 세로 줄 수를 구해준다.
		int iStar1 = 0, iStar2 = 0;
		for (int i = 0; i < 5; ++i)
		{
			// 한줄을 체크하기 전에 먼저 0으로 별 개수를 초기화 한다.
			iStar1 = iStar2 = 0;
			for (int j = 0; j < 5; ++j)
			{
				if (iNumber[i * 5 + j] == INT_MAX)
					++iStar1;

				if (iNumber[j * 5 + i] == INT_MAX)
					++iStar2;
			}


			// j for문을 빠져나오고 나면 현재 줄의 가로 별 개수가 몇개인지 iStar1 변수에 들어가게된다.
			// iStar1이 값이 5이면 한줄이 모두 *이라는 의미이므로 빙고 줄 카운트를 추가하게 해준다.
			if (iStar1 == 5)
				++iBingo;

			if (iStar2 == 5)
				++iBingo;
		}
			iStar1 = 0;

			for (int i = 0; i < 25; i += 6)
			{
				if (iNumber[i] == INT_MAX)
					++iStar1;
			}

			if (iStar1 == 5)
				++iBingo;
				

		

		// 왼쪽 상단 -> 왼쪽 하단으로  대각선 체크
		iStar1 = 0;
		for (int i = 4; i <= 20; i += 4)
		{
			if (iNumber[i] == INT_MAX)
				++iStar1;
		}

		if (iStar1 == 5) 
			++iBingo;
		
	}
	return 0;
}
